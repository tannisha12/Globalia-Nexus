import React from 'react';
import { MapPin, AlertTriangle, TrendingDown } from 'lucide-react';

interface VulnerabilityMapProps {
  vulnerabilities: any[];
}

export const VulnerabilityMap: React.FC<VulnerabilityMapProps> = ({ vulnerabilities }) => {
  const getRiskColor = (risk: string) => {
    switch (risk.toLowerCase()) {
      case 'critical': return 'border-red-500/50 bg-red-500/20';
      case 'high': return 'border-orange-500/50 bg-orange-500/20';
      case 'medium': return 'border-yellow-500/50 bg-yellow-500/20';
      case 'low': return 'border-green-500/50 bg-green-500/20';
      default: return 'border-gray-500/50 bg-gray-500/20';
    }
  };

  const getRiskIcon = (risk: string) => {
    switch (risk.toLowerCase()) {
      case 'critical': return <AlertTriangle className="w-4 h-4 text-red-400" />;
      case 'high': return <TrendingDown className="w-4 h-4 text-orange-400" />;
      default: return <AlertTriangle className="w-4 h-4 text-yellow-400" />;
    }
  };

  return (
    <div className="bg-slate-800/50 backdrop-blur-sm rounded-xl p-6 border border-slate-700">
      <div className="flex items-center gap-3 mb-6">
        <MapPin className="w-6 h-6 text-orange-400" />
        <h3 className="text-xl font-semibold text-white">Global Vulnerability Hotspots</h3>
      </div>
      
      {/* Vulnerability Map Grid */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mb-6">
        {vulnerabilities.map((vuln) => (
          <div key={vuln.id} className={`rounded-lg p-4 border ${getRiskColor(vuln.overallRisk)}`}>
            <div className="flex items-center justify-between mb-3">
              <div className="flex items-center gap-2">
                {getRiskIcon(vuln.overallRisk)}
                <span className="font-semibold text-white">{vuln.country}</span>
              </div>
              <span className={`text-xs px-2 py-1 rounded ${
                vuln.overallRisk === 'Critical' ? 'bg-red-500/30 text-red-400' :
                vuln.overallRisk === 'High' ? 'bg-orange-500/30 text-orange-400' :
                'bg-yellow-500/30 text-yellow-400'
              }`}>
                {vuln.overallRisk}
              </span>
            </div>
            
            <p className="text-sm text-gray-400 mb-3">{vuln.region}</p>
            
            {/* Top 3 Vulnerabilities */}
            <div className="space-y-1">
              {Object.entries(vuln.vulnerabilities)
                .sort(([,a]: [string, any], [,b]: [string, any]) => b.score - a.score)
                .slice(0, 3)
                .map(([key, value]: [string, any]) => (
                  <div key={key} className="flex items-center justify-between text-xs">
                    <span className="text-gray-300 capitalize">{key}</span>
                    <div className="flex items-center gap-1">
                      <div className={`w-2 h-2 rounded-full ${
                        value.score >= 80 ? 'bg-red-400' :
                        value.score >= 60 ? 'bg-orange-400' :
                        value.score >= 40 ? 'bg-yellow-400' : 'bg-green-400'
                      }`} />
                      <span className={`font-medium ${
                        value.score >= 80 ? 'text-red-400' :
                        value.score >= 60 ? 'text-orange-400' :
                        value.score >= 40 ? 'text-yellow-400' : 'text-green-400'
                      }`}>
                        {value.score}
                      </span>
                    </div>
                  </div>
                ))}
            </div>
          </div>
        ))}
      </div>
      
      {/* Legend */}
      <div className="flex items-center gap-6 text-sm">
        <div className="flex items-center gap-2">
          <div className="w-3 h-3 bg-red-500 rounded-full"></div>
          <span className="text-gray-400">Critical Risk</span>
        </div>
        <div className="flex items-center gap-2">
          <div className="w-3 h-3 bg-orange-500 rounded-full"></div>
          <span className="text-gray-400">High Risk</span>
        </div>
        <div className="flex items-center gap-2">
          <div className="w-3 h-3 bg-yellow-500 rounded-full"></div>
          <span className="text-gray-400">Medium Risk</span>
        </div>
        <div className="flex items-center gap-2">
          <div className="w-3 h-3 bg-green-500 rounded-full"></div>
          <span className="text-gray-400">Low Risk</span>
        </div>
      </div>
    </div>
  );
};